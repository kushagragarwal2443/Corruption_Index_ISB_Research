                                                Description of Files


word_list_creator.py
Purpose: Creates the list of 30 words closest to corruption and their associated words using Word2Vec
Input: The Hindu Data for 5 years
Output: list of 30 words closest to corruption 

index_creator.ipynb ( Unlemmatized Scoring)
Purpose: Creates the scores for each years data and also appends the fraction of articles crossing the threshold of 1.5 to a file
Input: hindu_data for year x
Output: Scored hindu_data for year x; Yearwise.txt

index_creator_final.ipynb ( Lemmatized and Stemmed Scoring)
Purpose: Creates the scores for each years data using Lemmatization and Stemming from Gensim
Input; hindu_data for year x
Output: Scored_lemma_hindu data for year x

plotData.ipynb
Purpose: Creates a plot of the corruption index inverse shifted by one year against the GDP values of that year
Input: Scored_lemma_hindu data for all years
Output: Matplotlib plots showing the correlations

score_distribution_plots.ipynb
Purpose: Checks scores distribution in the range 0-1.5 with a bucket size of 0.1 using histograms
Input: Scored_lemma_hindu data for all years
Output: Matplotlib plots showing the histograms yearwise

states_tagging.ipynb
Purpose: Tags states to each article using a state dictionary created for each article. The state represented the highest number of times is selected as the tag for the article
Input: Scored_lemma_hindu data for each year
Output: Scored_lemma_State_tagged_hindu data for each year

state_tagging_part2.ipynb
Purpose: Give the final state to each article using Category column in Hindu data and State column generated by states_tagging.ipynb. Also create plot of sgdp against corruption index for various states for a certain year
Input: Scored_lemma_State_tagged_hindu data for each year, SGDP values for each state yearwise
Output: Matplotlib Plot of sgdp versus corruption index shifted for one year

create_statewise_timeseries_dicts.ipynb
Purpose: Does the same thing as state_tagging_part2.ipynb but for 6 years of data instead of one
Input: Scored_lemma_State_tagged_hindu data for each year
Output: state_timeseries: a json file which contains ratios of articles for each state that cross the threshold from 2012-2018

plot_state_timeseries.ipynb
Purpose: Creates timeseries analysis for each state for 6 years of data (2012-2018)
Input: state_timeseries.json
Output: Matplotlib plots for each states timeseries 

